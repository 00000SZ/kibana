---
  swagger: "2.0"
  info: 
    version: "1.0.0"
    title: "Repository Service"
    description: "A set of API that manages the Git repositories"
#    termsOfService: "http://swagger.io/terms/"
  host: "localhost:8080"
  basePath: "/api"
  schemes: 
    - "http"
#  consumes:
#    - "application/json"
  produces: 
    - "application/json"
  paths: 
    /repository/{uri}:
      get:
        description: "Return a repository with given uri"
        operationId: findRepo
        parameters:
          - name: uri
            in: path
            type: string
            required: true
        responses:
          "200":
            schema:
              $ref: "#/definitions/Repository"
      delete:
        description: "Delete a repository with given uri"
        operationId: deleteRepo
        parameters:
          - name: uri
            in: path
            type: string
            required: true
        responses: "204"
    /repository:
      post:
        description: "Import a repository with given url"
        operationId: importRepo
        parameters:
          - name: url
            in: body
            schema:
              $ref: "#/definitions/NewRepository"
            required: true
        responses: "200"
    /person/{id}:
      get:
        description: "Return a person with a given id"
        operationId: findPerson
        parameters:
          - name: id
            in: path
            type: string
            required: true
        responses:
          "200":
            schema:
              $ref: "#/definitions/Person"
      delete:
        description: "Delete a person with a given id"
        operationId: deletePerson
        parameters:
          - name: id
            in: path
            type: string
            required: true
        responses: "204"
      put:
        description: "Update a person with a given id"
        operationId: updatePerson
        parameters:
          - name: id
            in: path
            type: string
            required: true
          - name: person
            in: body
            schema:
              $ref: "#/definitions/Person"
            required: true
        responses: "200"
      post:
        description: "Create a new person with a given id"
        operationId: createPerson
        parameters:
          - name: id
            in: path
            type: string
            required: true
          - name: person
            in: body
            schema:
              $ref: "#/definitions/Person"
            required: true
        responses: "200"
  definitions:
    Repository:
      type: object
      required:
        - uri
      properties:
        uri:
          type: string
        name:
          type: string
        org:
          type: string
        url:
          type: string
    NewRepository:
      type: object
      properties:
        url:
          type: string
    Person:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    Entry:
      type: object
      properties:
        path:
          type: string
        blob:
          type: string
        isBinary:
          type: boolean
        html:
          type: string
      required:
        - path
        - blob
    Commit:
      type: object
      properties:
        commit:
          type: string
        committer:
          type: string
        date:
          type: string
        message:
          type: string
        entries:
          type: array
          items:
            $ref: "#/definitions/Entry"
      required:
        - entries